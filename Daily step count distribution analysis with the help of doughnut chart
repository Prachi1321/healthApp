import pandas as pd
import matplotlib.pyplot as plt

# Load the log data into a pandas DataFrame
log_file_path = 'C:/Users/PRACHI PANDEY/Documents/Natwest/HealthApp_2k.log_structured.csv'
log_data = pd.read_csv(log_file_path)

# Extract step count from the 'Content' column using a regular expression
log_data['StepCount'] = log_data['Content'].str.extract(r'getTodayTotalDetailSteps = (\d+)##', expand=False)

# Convert 'StepCount' column to numeric, replacing non-numeric values with NaN
log_data['StepCount'] = pd.to_numeric(log_data['StepCount'], errors='coerce')

# Extract date and time from the 'Time' column
log_data['DateTime'] = pd.to_datetime(log_data['Time'], format='%Y%m%d-%H:%M:%S:%f', errors='coerce')

# Extract date from the 'DateTime' column
log_data['Date'] = log_data['DateTime'].dt.date

# Group by date and sum the step counts for each day
daily_step_count = log_data.groupby('Date')['StepCount'].sum()

# Filter out NaN values and days with zero step count
daily_step_count = daily_step_count.dropna()[daily_step_count > 0]

# Create a donut chart for overall step distribution
plt.figure(figsize=(6, 6))

# Plot the donut chart
wedges, texts, autotexts = plt.pie(
    daily_step_count,
    labels=daily_step_count.index,
    autopct='%1.1f%%',
    startangle=90,
    wedgeprops=dict(width=0.4),
    pctdistance=0.85,
    textprops=dict(color="w")
)

# Add a legend with step count information
plt.legend(wedges, daily_step_count.index, title="Dates", loc="center left", bbox_to_anchor=(1, 0, 0.5, 2))

# Add a circle at the center to make it a donut chart
center_circle = plt.Circle((0, 0), 0.2, fc='white')
fig = plt.gcf()
fig.gca().add_artist(center_circle)

plt.title('Daily Step Count Distribution')
plt.show()
